/* Projects Page: Super-labels display adjustments
============================================================================================ */
@import '../super-labels.less';

[github-projects-plus] {

  .js-project-container {

    /* Super-labels
    ============================================================================================ */
    .issue-card {
      position: relative !important;

      .labels {
        position: initial !important;

        // Styling for all labels (special or not)
        .issue-card { }
    
        /* Super-labels (Type labels)
        ============================================================================================ */
        
        // Compose selector
        @projects-type-selector-name:        ~'.issue-card-label[data-card-filter ^= "label:#"]';   // Name starts with "#"
        @projects-type-selector-name-legacy: ~'.issue-card-label[data-card-filter ^= "label:\"#"]'; // Name starts with "#" (legacy enterprise support)
        @projects-type-selector-description: ~'.issue-card-label[aria-label *= "[type]"]';          // Description contains "[type]"
        
        // Type label, basic styling + :hover state
        .projects-type-label(@i) {
          .super-type-label(@i);
          &:hover {
            max-width: 60% !important;
            min-height: 32px !important;
          }
        }

        // Position based on number of preceding elements matching same selector (max 5 labels)
        @{projects-type-selector-name},
        @{projects-type-selector-name-legacy},
        @{projects-type-selector-description} {
          .projects-type-label(0);

          & ~ @{projects-type-selector-name},
          & ~ @{projects-type-selector-name-legacy},
          & ~ @{projects-type-selector-description} {
            .projects-type-label(1);

            & ~ @{projects-type-selector-name},
            & ~ @{projects-type-selector-name-legacy},
            & ~ @{projects-type-selector-description} {
              .projects-type-label(2);

              & ~ @{projects-type-selector-name},
              & ~ @{projects-type-selector-name-legacy},
              & ~ @{projects-type-selector-description} {
                .projects-type-label(3);

                & ~ @{projects-type-selector-name},
                & ~ @{projects-type-selector-name-legacy},
                & ~ @{projects-type-selector-description} {
                  .super-label-default();
                }
              }
            }
          }
        }

        /* Super-labels (Special labels)
        ============================================================================================ */
        // Compose selector
        @projects-special-selector-name:        ~'.issue-card-label[data-card-filter ^= "label:@"]';    // Name starts with "@"
        @projects-special-selector-name-legacy: ~'.issue-card-label[data-card-filter ^= "label:\"@"]';  // Name starts with "@" (legacy enterprise support)
        @projects-special-selector-description: ~'.issue-card-label[aria-label *= "[special]"]';        // Description contains "[special]"

        // Special label, basic styling + :hover state
        .projects-special-label(@i) {
          .super-special-label(@i);
        }

        // Position based on number of preceding elements matching same selector (max 5 labels)
        @{projects-special-selector-name},
        @{projects-special-selector-name-legacy},
        @{projects-special-selector-description} {
          .projects-special-label(0);

          & ~ @{projects-special-selector-name},
          & ~ @{projects-special-selector-name-legacy},
          & ~ @{projects-special-selector-description} {
            .projects-special-label(1);

            & ~ @{projects-special-selector-name},
            & ~ @{projects-special-selector-name-legacy},
            & ~ @{projects-special-selector-description} {
              .projects-special-label(2);

              & ~ @{projects-special-selector-name},
              & ~ @{projects-special-selector-name-legacy},
              & ~ @{projects-special-selector-description} {
                .projects-special-label(3);

                & ~ @{projects-special-selector-name},
                & ~ @{projects-special-selector-name-legacy},
                & ~ @{projects-special-selector-description} {
                  .super-label-default();
                }
              }
            }
          }
        }

      }

    }

  }

}
